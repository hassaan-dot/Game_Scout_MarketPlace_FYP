{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder\\\\Game_Scout_MarketPlace_FYP\\\\src\\\\App\\\\Components\\\\chatBotPopUp\\\\component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useChatBot } from \"../../../hooks/useDashboard\";\nimport { useModalStore } from \"../../../store/useModalStore\";\nimport ReactMarkdown from \"react-markdown\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBotPopup = ({\n  onClose\n}) => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [chatHistory, setChatHistory] = useState([]);\n  const previousAiResponse = useRef(\"\");\n  const chatEndRef = useRef(null);\n  const {\n    AiResponse\n  } = useModalStore();\n  const {\n    mutate: handleChat\n  } = useChatBot();\n  const [isWaiting, setIsWaiting] = useState(false); // NEW\n\n  useEffect(() => {\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  }, [chatHistory]);\n  const handleChatBot = () => {\n    if (!message.trim()) return;\n    setChatHistory(prev => [...prev, {\n      sender: \"user\",\n      text: message\n    }]);\n    handleChat({\n      message\n    });\n    setMessage(\"\");\n    setIsWaiting(true); // Set to waiting\n  };\n  useEffect(() => {\n    if (AiResponse && AiResponse !== previousAiResponse.current && chatHistory.length > 0) {\n      setChatHistory(prev => [...prev, {\n        sender: \"bot\",\n        text: AiResponse\n      }]);\n      previousAiResponse.current = AiResponse;\n      setIsWaiting(false); // Clear waiting after bot response\n    }\n  }, [AiResponse, chatHistory]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-20 right-6 w-80 h-96 bg-white rounded-lg shadow-xl z-50 flex flex-col\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-3 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-md font-semibold\",\n        children: \"Intelligence Help\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"text-gray-500 hover:text-red-500 text-xl font-bold\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-3 overflow-y-auto space-y-2 bg-gray-50\",\n      children: [chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `max-w-[80%] p-2 rounded text-sm ${msg.sender === \"user\" ? \"bg-blue-600 text-white self-end ml-auto\" : \"bg-gray-200 text-gray-800 self-start\"}`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          children: msg === null || msg === void 0 ? void 0 : msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)), isWaiting && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-[80%] p-2 rounded text-sm bg-gray-200 text-gray-800 self-start\",\n        children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n          color: \"#4B5563\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 border-t\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: message,\n        className: \"w-full p-2 border rounded text-sm\",\n        onChange: e => setMessage(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleChatBot()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChatBot,\n        className: \"mt-2 w-full bg-blue-600 text-white p-2 rounded hover:bg-blue-700 transition duration-200\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBotPopup, \"sZR9TUOEssrt+eKo4ViASNzptLA=\", false, function () {\n  return [useModalStore, useChatBot];\n});\n_c = ChatBotPopup;\nexport default ChatBotPopup;\nvar _c;\n$RefreshReg$(_c, \"ChatBotPopup\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useChatBot","useModalStore","ReactMarkdown","ClipLoader","jsxDEV","_jsxDEV","ChatBotPopup","onClose","_s","message","setMessage","chatHistory","setChatHistory","previousAiResponse","chatEndRef","AiResponse","mutate","handleChat","isWaiting","setIsWaiting","current","scrollIntoView","behavior","handleChatBot","trim","prev","sender","text","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","color","size","ref","type","placeholder","value","onChange","e","target","onKeyDown","key","_c","$RefreshReg$"],"sources":["D:/New folder/Game_Scout_MarketPlace_FYP/src/App/Components/chatBotPopUp/component.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useChatBot } from \"../../../hooks/useDashboard\";\r\nimport { useModalStore } from \"../../../store/useModalStore\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst ChatBotPopup = ({ onClose }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n\r\n  const previousAiResponse = useRef(\"\");\r\n\r\n  const chatEndRef = useRef(null);\r\n\r\n  const { AiResponse } = useModalStore();\r\n\r\n  const { mutate: handleChat } = useChatBot();\r\n\r\n  const [isWaiting, setIsWaiting] = useState(false); // NEW\r\n\r\n  useEffect(() => {\r\n    if (chatEndRef.current) {\r\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n  }, [chatHistory]);\r\n\r\n  const handleChatBot = () => {\r\n    if (!message.trim()) return;\r\n    setChatHistory((prev) => [...prev, { sender: \"user\", text: message }]);\r\n    handleChat({ message });\r\n    setMessage(\"\");\r\n    setIsWaiting(true); // Set to waiting\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      AiResponse &&\r\n      AiResponse !== previousAiResponse.current &&\r\n      chatHistory.length > 0\r\n    ) {\r\n      setChatHistory((prev) => [...prev, { sender: \"bot\", text: AiResponse }]);\r\n      previousAiResponse.current = AiResponse;\r\n      setIsWaiting(false); // Clear waiting after bot response\r\n    }\r\n  }, [AiResponse, chatHistory]);\r\n\r\n  return (\r\n    <div className=\"fixed bottom-20 right-6 w-80 h-96 bg-white rounded-lg shadow-xl z-50 flex flex-col\">\r\n      <div className=\"flex justify-between items-center p-3 border-b\">\r\n        <h2 className=\"text-md font-semibold\">{\"Intelligence Help\"}</h2>\r\n        <button\r\n          onClick={onClose}\r\n          className=\"text-gray-500 hover:text-red-500 text-xl font-bold\"\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"flex-1 p-3 overflow-y-auto space-y-2 bg-gray-50\">\r\n        {chatHistory.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            className={`max-w-[80%] p-2 rounded text-sm ${\r\n              msg.sender === \"user\"\r\n                ? \"bg-blue-600 text-white self-end ml-auto\"\r\n                : \"bg-gray-200 text-gray-800 self-start\"\r\n            }`}\r\n          >\r\n            <ReactMarkdown>{msg?.text}</ReactMarkdown>\r\n          </div>\r\n        ))}\r\n\r\n        {isWaiting && (\r\n          <div className=\"max-w-[80%] p-2 rounded text-sm bg-gray-200 text-gray-800 self-start\">\r\n            <ClipLoader color=\"#4B5563\" size={20} />\r\n          </div>\r\n        )}\r\n\r\n        <div ref={chatEndRef} />\r\n      </div>\r\n\r\n      <div className=\"p-3 border-t\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={message}\r\n          className=\"w-full p-2 border rounded text-sm\"\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && handleChatBot()}\r\n        />\r\n        <button\r\n          onClick={handleChatBot}\r\n          className=\"mt-2 w-full bg-blue-600 text-white p-2 rounded hover:bg-blue-700 transition duration-200\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBotPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}